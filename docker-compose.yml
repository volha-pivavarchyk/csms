version: "3.7"
services:
    cs-nginx:
        image: nginx:latest
        container_name: cs-nginx
        ports:
            - "8080:80"
        volumes:
            - ./src:/var/www/html:rw
            - ./docker/nginx/site.conf:/etc/nginx/conf.d/default.conf:rw
            - ./docker/nginx/logs:/var/log/nginx:rw
        links:
            - cs-php
        depends_on:
            - cs-php
        networks:
            - u-online
    cs-php:
        build: ./docker/php
        container_name: cs-php
        volumes:
            - ./src:/var/www/html:rw
            - ./docker/php/log.conf:/usr/local/etc/php-fpm.d/zz-log.conf
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
#            - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
#            - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
        environment:
            DB_DRIVER: $DB_DRIVER
            DB_HOST: $DB_HOST
            DB_PORT: $DB_PORT
            DB_NAME: $DB_NAME
            DB_USER: $DB_USER
            DB_PASSWORD: $DB_PASSWORD
            DB_ROOT_USER: $DB_ROOT_USER
            DB_ROOT_PASSWORD: $DB_ROOT_PASSWORD
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
#        extra_hosts:
#            - host.docker.internal:172.17.0.1
#        environment:
#            PHP_IDE_CONFIG: "serverName=PhpServerBase"
        links:
            - cs-db
        networks:
            - u-online
    cs-phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: cs-phpmyadmin
        ports:
            - "8090:80"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        links:
            - cs-db
        environment:
            PMA_HOST: cs-db
        networks:
            - u-online
    cs-db:
        image: mysql:8.0.20
        container_name: cs-db
        ports:
            - "33063:3306"
        volumes:
#            - ./docker/mysql-init:/docker-entrypoint-initdb.d:rw
            - ./docker/mysql/:/var/lib/mysql/:rw
#        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password --init-file /docker-entrypoint-initdb.d/mysql-init.sql
        environment:
            MYSQL_ROOT_HOST: $ROOT_HOST
            MYSQL_DATABASE: $DB_NAME
            MYSQL_USER: $DB_USER
            MYSQL_PASSWORD: $DB_PASSWORD
            MYSQL_ALLOW_EMPTY_PASSWORD: $DB_ALLOW_EMPTY_PASSWORD
        restart: always
        networks:
            - u-online
#Docker Networks
networks:
    u-online:
        driver: bridge

